// <auto-generated />
using System;
using BrunoCorreia.ControleProdutos.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BrunoCorreia.ControleProdutos.Infrastructure.Migrations
{
    [DbContext(typeof(ControleProdutosContext))]
    partial class ControleProdutosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.HasSequence("Categoriaseq")
                .IncrementsBy(10);

            modelBuilder.HasSequence("Estoqueseq")
                .IncrementsBy(10);

            modelBuilder.HasSequence("ItemOperacaoseq")
                .IncrementsBy(10);

            modelBuilder.HasSequence("Marcaseq")
                .IncrementsBy(10);

            modelBuilder.HasSequence("Operacaoseq")
                .IncrementsBy(10);

            modelBuilder.HasSequence("Produtoseq")
                .IncrementsBy(10);

            modelBuilder.HasSequence("ReajustePrecoCategoriaseq")
                .IncrementsBy(10);

            modelBuilder.Entity("BrunoCorreia.ControleProdutos.Core.Entidades.Aggregates.Categoria.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseHiLo("Categoriaseq");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReajusteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReajusteId");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("BrunoCorreia.ControleProdutos.Core.Entidades.Aggregates.Categoria.ReajustePrecoCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseHiLo("ReajustePrecoCategoriaseq");

                    b.Property<DateTime?>("FinalVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InicioVigencia")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Porcentagem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoReajuste")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReajustePrecoCategoria");
                });

            modelBuilder.Entity("BrunoCorreia.ControleProdutos.Core.Entidades.Aggregates.Operacao.ItemOperacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseHiLo("ItemOperacaoseq");

                    b.Property<int?>("OperacaoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperacaoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItemOperacao");
                });

            modelBuilder.Entity("BrunoCorreia.ControleProdutos.Core.Entidades.Aggregates.Operacao.Operacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseHiLo("Operacaoseq");

                    b.Property<DateTime>("DataOcorrencia")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusOperacao")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Operacao");
                });

            modelBuilder.Entity("BrunoCorreia.ControleProdutos.Core.Entidades.Estoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseHiLo("Estoqueseq");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Estoque");
                });

            modelBuilder.Entity("BrunoCorreia.ControleProdutos.Core.Entidades.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseHiLo("Marcaseq");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("BrunoCorreia.ControleProdutos.Core.Entidades.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseHiLo("Produtoseq");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("MarcaId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("BrunoCorreia.ControleProdutos.Core.Entidades.Aggregates.Categoria.Categoria", b =>
                {
                    b.HasOne("BrunoCorreia.ControleProdutos.Core.Entidades.Aggregates.Categoria.ReajustePrecoCategoria", "Reajuste")
                        .WithMany()
                        .HasForeignKey("ReajusteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Reajuste");
                });

            modelBuilder.Entity("BrunoCorreia.ControleProdutos.Core.Entidades.Aggregates.Operacao.ItemOperacao", b =>
                {
                    b.HasOne("BrunoCorreia.ControleProdutos.Core.Entidades.Aggregates.Operacao.Operacao", null)
                        .WithMany("ItensOperacao")
                        .HasForeignKey("OperacaoId");

                    b.HasOne("BrunoCorreia.ControleProdutos.Core.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("BrunoCorreia.ControleProdutos.Core.Entidades.Estoque", b =>
                {
                    b.HasOne("BrunoCorreia.ControleProdutos.Core.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("BrunoCorreia.ControleProdutos.Core.Entidades.Produto", b =>
                {
                    b.HasOne("BrunoCorreia.ControleProdutos.Core.Entidades.Aggregates.Categoria.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrunoCorreia.ControleProdutos.Core.Entidades.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("BrunoCorreia.ControleProdutos.Core.Entidades.Aggregates.Operacao.Operacao", b =>
                {
                    b.Navigation("ItensOperacao");
                });
#pragma warning restore 612, 618
        }
    }
}
